Terminals unused in grammar

   CONSTANT
   DELETE
   SUPER
   DBL_QUOTE


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 statement_list: statement
    3               | statement statement_list

    4 statement: device_declarator_statement
    5          | variable_definition_statement
    6          | function_definition_statement
    7          | class_definition_statement

    8 block_statement: LBRACE statement_list_block_level RBRACE

    9 statement_list_block_level: statement_block_level
   10                           | statement_block_level statement_list_block_level

   11 statement_block_level: variable_definition_statement
   12                      | block_statement
   13                      | variable_set_statement
   14                      | function_invocation_statement
   15                      | if_block_statement
   16                      | while_block_statement
   17                      | return_statement
   18                      | method_invocation_statement

   19 device_declarator_statement: device_type IDENTIFIER SEMICOLON

   20 type_declarator: primitive_declarator type_augmentation_list
   21                | user_declarator type_augmentation_list
   22                | primitive_declarator
   23                | user_declarator

   24 type_augmentation_list: type_augmentation
   25                       | type_augmentation type_augmentation_list

   26 type_augmentation: POINTER
   27                  | array_type_augmentation

   28 array_type_augmentation: LBRACKET arithmetic_expression RBRACKET

   29 primitive_declarator: primitive_type IDENTIFIER

   30 user_declarator: IDENTIFIER IDENTIFIER

   31 variable_definition_statement: type_declarator EQ expression SEMICOLON

   32 class_definition_statement: class_declarator class_body

   33 class_declarator: class_name
   34                 | class_name class_extending

   35 class_name: CLASS IDENTIFIER

   36 class_extending: EXTENDS IDENTIFIER

   37 class_body: LBRACE class_attribute_list RBRACE

   38 class_attribute_list: class_attribute
   39                     | class_attribute class_attribute_list

   40 class_attribute: function_definition_statement
   41                | class_field

   42 class_field: type_declarator IDENTIFIER

   43 function_definition_statement: primitive_declarator LPAREN formal_parameter_list RPAREN block_statement

   44 variable_set_statement: IDENTIFIER EQ expression SEMICOLON

   45 return_statement: RETURN expression SEMICOLON
   46                 | RETURN SEMICOLON

   47 function_invocation: IDENTIFIER LPAREN parameter_list RPAREN

   48 function_invocation_statement: function_invocation SEMICOLON

   49 method_invocation: class_attribute_identifier LPAREN parameter_list RPAREN

   50 method_invocation_statement: method_invocation SEMICOLON

   51 class_attribute_identifier: IDENTIFIER DOT IDENTIFIER
   52                           | IDENTIFIER DOT class_attribute_identifier

   53 if_block_statement: IF LPAREN expression RPAREN block_statement
   54                   | IF LPAREN expression RPAREN block_statement ELSE block_statement

   55 while_block_statement: WHILE LPAREN expression RPAREN block_statement

   56 formal_parameter_list: type_declarator
   57                      | type_declarator COMMA formal_parameter_list
   58                      | /* empty */

   59 parameter_list: type_declarator
   60               | type_declarator COMMA parameter_list
   61               | /* empty */

   62 expression: logical_expression
   63           | allocation_expression

   64 allocation_expression: ALLOCATE allocation_invocation SEMICOLON

   65 allocation_invocation: primitive_type LPAREN parameter_list RPAREN
   66                      | IDENTIFIER LPAREN parameter_list RPAREN

   67 logical_expression: logical_and_expression
   68                   | logical_expression OR logical_and_expression

   69 logical_and_expression: equality_expression
   70                       | logical_and_expression AND equality_expression

   71 equality_expression: relational_expression
   72                    | equality_expression DBL_EQ relational_expression
   73                    | equality_expression NOT_EQ relational_expression

   74 relational_expression: bool_expression
   75                      | relational_expression GTR bool_expression
   76                      | relational_expression LESS bool_expression
   77                      | relational_expression GTR_EQ bool_expression
   78                      | relational_expression LESS_EQ bool_expression

   79 bool_expression: arithmetic_expression
   80                | BANG arithmetic_expression

   81 arithmetic_expression: arithmetic_factor
   82                      | arithmetic_expression PLUS arithmetic_factor
   83                      | arithmetic_expression MINUS arithmetic_factor

   84 arithmetic_factor: arithmetic_unary
   85                  | arithmetic_factor STAR arithmetic_unary
   86                  | arithmetic_factor SLASH arithmetic_unary

   87 arithmetic_unary: unit
   88                 | MINUS arithmetic_unary
   89                 | LPAREN arithmetic_expression RPAREN

   90 unit: IDENTIFIER
   91     | integer_value
   92     | char_value
   93     | bool_value
   94     | function_invocation
   95     | array_accessor_unit
   96     | method_invocation
   97     | dereferenced_pointer

   98 array_accessor_unit: IDENTIFIER LBRACKET arithmetic_expression RBRACKET

   99 dereferenced_pointer: DEREF IDENTIFIER

  100 integer_value: DECIMAL
  101              | OCTAL
  102              | HEX
  103              | BINARY

  104 char_value: SGL_QUOTE IDENTIFIER SGL_QUOTE

  105 bool_value: TRUE
  106           | FALSE

  107 primitive_type: BOOL
  108               | INT
  109               | CHAR
  110               | VOID

  111 device_type: LIGHT_ACTUATOR
  112            | SERVO_ACTUATOR
  113            | SOUND_SENSOR
  114            | LIGHT_SENSOR
  115            | DISTANCE_SENSOR
  116            | TEMPERATURE_SENSOR


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 19 29 30 35 36 42 44 47 51 52 66 90 98 99 104
PLUS (259) 82
MINUS (260) 83 88
STAR (261) 85
SLASH (262) 86
BANG (263) 80
BOOL (264) 107
INT (265) 108
CHAR (266) 109
POINTER (267) 26
VOID (268) 110
LPAREN (269) 43 47 49 53 54 55 65 66 89
RPAREN (270) 43 47 49 53 54 55 65 66 89
GTR (271) 75
LESS (272) 76
GTR_EQ (273) 77
LESS_EQ (274) 78
DBL_EQ (275) 72
EQ (276) 31 44
NOT_EQ (277) 73
OR (278) 68
AND (279) 70
COMMA (280) 57 60
SEMICOLON (281) 19 31 44 45 46 48 50 64
IF (282) 53 54
ELSE (283) 54
WHILE (284) 55
LBRACE (285) 8 37
RBRACE (286) 8 37
DECIMAL (287) 100
OCTAL (288) 101
HEX (289) 102
BINARY (290) 103
LIGHT_ACTUATOR (291) 111
SERVO_ACTUATOR (292) 112
SOUND_SENSOR (293) 113
LIGHT_SENSOR (294) 114
DISTANCE_SENSOR (295) 115
TEMPERATURE_SENSOR (296) 116
TRUE (297) 105
FALSE (298) 106
CONSTANT (299)
RETURN (300) 45 46
ALLOCATE (301) 64
DELETE (302)
DEREF (303) 99
SUPER (304)
CLASS (305) 35
EXTENDS (306) 36
LBRACKET (307) 28 98
RBRACKET (308) 28 98
DOT (309) 51 52
DBL_QUOTE (310)
SGL_QUOTE (311) 104


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
program (58)
    on left: 1, on right: 0
statement_list (59)
    on left: 2 3, on right: 1 3
statement (60)
    on left: 4 5 6 7, on right: 2 3
block_statement (61)
    on left: 8, on right: 12 43 53 54 55
statement_list_block_level (62)
    on left: 9 10, on right: 8 10
statement_block_level (63)
    on left: 11 12 13 14 15 16 17 18, on right: 9 10
device_declarator_statement (64)
    on left: 19, on right: 4
type_declarator (65)
    on left: 20 21 22 23, on right: 31 42 56 57 59 60
type_augmentation_list (66)
    on left: 24 25, on right: 20 21 25
type_augmentation (67)
    on left: 26 27, on right: 24 25
array_type_augmentation (68)
    on left: 28, on right: 27
primitive_declarator (69)
    on left: 29, on right: 20 22 43
user_declarator (70)
    on left: 30, on right: 21 23
variable_definition_statement (71)
    on left: 31, on right: 5 11
class_definition_statement (72)
    on left: 32, on right: 7
class_declarator (73)
    on left: 33 34, on right: 32
class_name (74)
    on left: 35, on right: 33 34
class_extending (75)
    on left: 36, on right: 34
class_body (76)
    on left: 37, on right: 32
class_attribute_list (77)
    on left: 38 39, on right: 37 39
class_attribute (78)
    on left: 40 41, on right: 38 39
class_field (79)
    on left: 42, on right: 41
function_definition_statement (80)
    on left: 43, on right: 6 40
variable_set_statement (81)
    on left: 44, on right: 13
return_statement (82)
    on left: 45 46, on right: 17
function_invocation (83)
    on left: 47, on right: 48 94
function_invocation_statement (84)
    on left: 48, on right: 14
method_invocation (85)
    on left: 49, on right: 50 96
method_invocation_statement (86)
    on left: 50, on right: 18
class_attribute_identifier (87)
    on left: 51 52, on right: 49 52
if_block_statement (88)
    on left: 53 54, on right: 15
while_block_statement (89)
    on left: 55, on right: 16
formal_parameter_list (90)
    on left: 56 57 58, on right: 43 57
parameter_list (91)
    on left: 59 60 61, on right: 47 49 60 65 66
expression (92)
    on left: 62 63, on right: 31 44 45 53 54 55
allocation_expression (93)
    on left: 64, on right: 63
allocation_invocation (94)
    on left: 65 66, on right: 64
logical_expression (95)
    on left: 67 68, on right: 62 68
logical_and_expression (96)
    on left: 69 70, on right: 67 68 70
equality_expression (97)
    on left: 71 72 73, on right: 69 70 72 73
relational_expression (98)
    on left: 74 75 76 77 78, on right: 71 72 73 75 76 77 78
bool_expression (99)
    on left: 79 80, on right: 74 75 76 77 78
arithmetic_expression (100)
    on left: 81 82 83, on right: 28 79 80 82 83 89 98
arithmetic_factor (101)
    on left: 84 85 86, on right: 81 82 83 85 86
arithmetic_unary (102)
    on left: 87 88 89, on right: 84 85 86 88
unit (103)
    on left: 90 91 92 93 94 95 96 97, on right: 87
array_accessor_unit (104)
    on left: 98, on right: 95
dereferenced_pointer (105)
    on left: 99, on right: 97
integer_value (106)
    on left: 100 101 102 103, on right: 91
char_value (107)
    on left: 104, on right: 92
bool_value (108)
    on left: 105 106, on right: 93
primitive_type (109)
    on left: 107 108 109 110, on right: 29 65
device_type (110)
    on left: 111 112 113 114 115 116, on right: 19


state 0

    0 $accept: . program $end

    IDENTIFIER          shift, and go to state 1
    BOOL                shift, and go to state 2
    INT                 shift, and go to state 3
    CHAR                shift, and go to state 4
    VOID                shift, and go to state 5
    LIGHT_ACTUATOR      shift, and go to state 6
    SERVO_ACTUATOR      shift, and go to state 7
    SOUND_SENSOR        shift, and go to state 8
    LIGHT_SENSOR        shift, and go to state 9
    DISTANCE_SENSOR     shift, and go to state 10
    TEMPERATURE_SENSOR  shift, and go to state 11
    CLASS               shift, and go to state 12

    program                        go to state 13
    statement_list                 go to state 14
    statement                      go to state 15
    device_declarator_statement    go to state 16
    type_declarator                go to state 17
    primitive_declarator           go to state 18
    user_declarator                go to state 19
    variable_definition_statement  go to state 20
    class_definition_statement     go to state 21
    class_declarator               go to state 22
    class_name                     go to state 23
    function_definition_statement  go to state 24
    primitive_type                 go to state 25
    device_type                    go to state 26


state 1

   30 user_declarator: IDENTIFIER . IDENTIFIER

    IDENTIFIER  shift, and go to state 27


state 2

  107 primitive_type: BOOL .

    $default  reduce using rule 107 (primitive_type)


state 3

  108 primitive_type: INT .

    $default  reduce using rule 108 (primitive_type)


state 4

  109 primitive_type: CHAR .

    $default  reduce using rule 109 (primitive_type)


state 5

  110 primitive_type: VOID .

    $default  reduce using rule 110 (primitive_type)


state 6

  111 device_type: LIGHT_ACTUATOR .

    $default  reduce using rule 111 (device_type)


state 7

  112 device_type: SERVO_ACTUATOR .

    $default  reduce using rule 112 (device_type)


state 8

  113 device_type: SOUND_SENSOR .

    $default  reduce using rule 113 (device_type)


state 9

  114 device_type: LIGHT_SENSOR .

    $default  reduce using rule 114 (device_type)


state 10

  115 device_type: DISTANCE_SENSOR .

    $default  reduce using rule 115 (device_type)


state 11

  116 device_type: TEMPERATURE_SENSOR .

    $default  reduce using rule 116 (device_type)


state 12

   35 class_name: CLASS . IDENTIFIER

    IDENTIFIER  shift, and go to state 28


state 13

    0 $accept: program . $end

    $end  shift, and go to state 29


state 14

    1 program: statement_list .

    $default  reduce using rule 1 (program)


state 15

    2 statement_list: statement .
    3               | statement . statement_list

    IDENTIFIER          shift, and go to state 1
    BOOL                shift, and go to state 2
    INT                 shift, and go to state 3
    CHAR                shift, and go to state 4
    VOID                shift, and go to state 5
    LIGHT_ACTUATOR      shift, and go to state 6
    SERVO_ACTUATOR      shift, and go to state 7
    SOUND_SENSOR        shift, and go to state 8
    LIGHT_SENSOR        shift, and go to state 9
    DISTANCE_SENSOR     shift, and go to state 10
    TEMPERATURE_SENSOR  shift, and go to state 11
    CLASS               shift, and go to state 12

    $default  reduce using rule 2 (statement_list)

    statement_list                 go to state 30
    statement                      go to state 15
    device_declarator_statement    go to state 16
    type_declarator                go to state 17
    primitive_declarator           go to state 18
    user_declarator                go to state 19
    variable_definition_statement  go to state 20
    class_definition_statement     go to state 21
    class_declarator               go to state 22
    class_name                     go to state 23
    function_definition_statement  go to state 24
    primitive_type                 go to state 25
    device_type                    go to state 26


state 16

    4 statement: device_declarator_statement .

    $default  reduce using rule 4 (statement)


state 17

   31 variable_definition_statement: type_declarator . EQ expression SEMICOLON

    EQ  shift, and go to state 31


state 18

   20 type_declarator: primitive_declarator . type_augmentation_list
   22                | primitive_declarator .
   43 function_definition_statement: primitive_declarator . LPAREN formal_parameter_list RPAREN block_statement

    POINTER   shift, and go to state 32
    LPAREN    shift, and go to state 33
    LBRACKET  shift, and go to state 34

    $default  reduce using rule 22 (type_declarator)

    type_augmentation_list   go to state 35
    type_augmentation        go to state 36
    array_type_augmentation  go to state 37


state 19

   21 type_declarator: user_declarator . type_augmentation_list
   23                | user_declarator .

    POINTER   shift, and go to state 32
    LBRACKET  shift, and go to state 34

    $default  reduce using rule 23 (type_declarator)

    type_augmentation_list   go to state 38
    type_augmentation        go to state 36
    array_type_augmentation  go to state 37


state 20

    5 statement: variable_definition_statement .

    $default  reduce using rule 5 (statement)


state 21

    7 statement: class_definition_statement .

    $default  reduce using rule 7 (statement)


state 22

   32 class_definition_statement: class_declarator . class_body

    LBRACE  shift, and go to state 39

    class_body  go to state 40


state 23

   33 class_declarator: class_name .
   34                 | class_name . class_extending

    EXTENDS  shift, and go to state 41

    $default  reduce using rule 33 (class_declarator)

    class_extending  go to state 42


state 24

    6 statement: function_definition_statement .

    $default  reduce using rule 6 (statement)


state 25

   29 primitive_declarator: primitive_type . IDENTIFIER

    IDENTIFIER  shift, and go to state 43


state 26

   19 device_declarator_statement: device_type . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 44


state 27

   30 user_declarator: IDENTIFIER IDENTIFIER .

    $default  reduce using rule 30 (user_declarator)


state 28

   35 class_name: CLASS IDENTIFIER .

    $default  reduce using rule 35 (class_name)


state 29

    0 $accept: program $end .

    $default  accept


state 30

    3 statement_list: statement statement_list .

    $default  reduce using rule 3 (statement_list)


state 31

   31 variable_definition_statement: type_declarator EQ . expression SEMICOLON

    IDENTIFIER  shift, and go to state 45
    MINUS       shift, and go to state 46
    BANG        shift, and go to state 47
    LPAREN      shift, and go to state 48
    DECIMAL     shift, and go to state 49
    OCTAL       shift, and go to state 50
    HEX         shift, and go to state 51
    BINARY      shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    ALLOCATE    shift, and go to state 55
    DEREF       shift, and go to state 56
    SGL_QUOTE   shift, and go to state 57

    function_invocation         go to state 58
    method_invocation           go to state 59
    class_attribute_identifier  go to state 60
    expression                  go to state 61
    allocation_expression       go to state 62
    logical_expression          go to state 63
    logical_and_expression      go to state 64
    equality_expression         go to state 65
    relational_expression       go to state 66
    bool_expression             go to state 67
    arithmetic_expression       go to state 68
    arithmetic_factor           go to state 69
    arithmetic_unary            go to state 70
    unit                        go to state 71
    array_accessor_unit         go to state 72
    dereferenced_pointer        go to state 73
    integer_value               go to state 74
    char_value                  go to state 75
    bool_value                  go to state 76


state 32

   26 type_augmentation: POINTER .

    $default  reduce using rule 26 (type_augmentation)


state 33

   43 function_definition_statement: primitive_declarator LPAREN . formal_parameter_list RPAREN block_statement

    IDENTIFIER  shift, and go to state 1
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    CHAR        shift, and go to state 4
    VOID        shift, and go to state 5

    $default  reduce using rule 58 (formal_parameter_list)

    type_declarator        go to state 77
    primitive_declarator   go to state 78
    user_declarator        go to state 19
    formal_parameter_list  go to state 79
    primitive_type         go to state 25


state 34

   28 array_type_augmentation: LBRACKET . arithmetic_expression RBRACKET

    IDENTIFIER  shift, and go to state 45
    MINUS       shift, and go to state 46
    LPAREN      shift, and go to state 48
    DECIMAL     shift, and go to state 49
    OCTAL       shift, and go to state 50
    HEX         shift, and go to state 51
    BINARY      shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    DEREF       shift, and go to state 56
    SGL_QUOTE   shift, and go to state 57

    function_invocation         go to state 58
    method_invocation           go to state 59
    class_attribute_identifier  go to state 60
    arithmetic_expression       go to state 80
    arithmetic_factor           go to state 69
    arithmetic_unary            go to state 70
    unit                        go to state 71
    array_accessor_unit         go to state 72
    dereferenced_pointer        go to state 73
    integer_value               go to state 74
    char_value                  go to state 75
    bool_value                  go to state 76


state 35

   20 type_declarator: primitive_declarator type_augmentation_list .

    $default  reduce using rule 20 (type_declarator)


state 36

   24 type_augmentation_list: type_augmentation .
   25                       | type_augmentation . type_augmentation_list

    POINTER   shift, and go to state 32
    LBRACKET  shift, and go to state 34

    $default  reduce using rule 24 (type_augmentation_list)

    type_augmentation_list   go to state 81
    type_augmentation        go to state 36
    array_type_augmentation  go to state 37


state 37

   27 type_augmentation: array_type_augmentation .

    $default  reduce using rule 27 (type_augmentation)


state 38

   21 type_declarator: user_declarator type_augmentation_list .

    $default  reduce using rule 21 (type_declarator)


state 39

   37 class_body: LBRACE . class_attribute_list RBRACE

    IDENTIFIER  shift, and go to state 1
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    CHAR        shift, and go to state 4
    VOID        shift, and go to state 5

    type_declarator                go to state 82
    primitive_declarator           go to state 18
    user_declarator                go to state 19
    class_attribute_list           go to state 83
    class_attribute                go to state 84
    class_field                    go to state 85
    function_definition_statement  go to state 86
    primitive_type                 go to state 25


state 40

   32 class_definition_statement: class_declarator class_body .

    $default  reduce using rule 32 (class_definition_statement)


state 41

   36 class_extending: EXTENDS . IDENTIFIER

    IDENTIFIER  shift, and go to state 87


state 42

   34 class_declarator: class_name class_extending .

    $default  reduce using rule 34 (class_declarator)


state 43

   29 primitive_declarator: primitive_type IDENTIFIER .

    $default  reduce using rule 29 (primitive_declarator)


state 44

   19 device_declarator_statement: device_type IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 88


state 45

   47 function_invocation: IDENTIFIER . LPAREN parameter_list RPAREN
   51 class_attribute_identifier: IDENTIFIER . DOT IDENTIFIER
   52                           | IDENTIFIER . DOT class_attribute_identifier
   90 unit: IDENTIFIER .
   98 array_accessor_unit: IDENTIFIER . LBRACKET arithmetic_expression RBRACKET

    LPAREN    shift, and go to state 89
    LBRACKET  shift, and go to state 90
    DOT       shift, and go to state 91

    $default  reduce using rule 90 (unit)


state 46

   88 arithmetic_unary: MINUS . arithmetic_unary

    IDENTIFIER  shift, and go to state 45
    MINUS       shift, and go to state 46
    LPAREN      shift, and go to state 48
    DECIMAL     shift, and go to state 49
    OCTAL       shift, and go to state 50
    HEX         shift, and go to state 51
    BINARY      shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    DEREF       shift, and go to state 56
    SGL_QUOTE   shift, and go to state 57

    function_invocation         go to state 58
    method_invocation           go to state 59
    class_attribute_identifier  go to state 60
    arithmetic_unary            go to state 92
    unit                        go to state 71
    array_accessor_unit         go to state 72
    dereferenced_pointer        go to state 73
    integer_value               go to state 74
    char_value                  go to state 75
    bool_value                  go to state 76


state 47

   80 bool_expression: BANG . arithmetic_expression

    IDENTIFIER  shift, and go to state 45
    MINUS       shift, and go to state 46
    LPAREN      shift, and go to state 48
    DECIMAL     shift, and go to state 49
    OCTAL       shift, and go to state 50
    HEX         shift, and go to state 51
    BINARY      shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    DEREF       shift, and go to state 56
    SGL_QUOTE   shift, and go to state 57

    function_invocation         go to state 58
    method_invocation           go to state 59
    class_attribute_identifier  go to state 60
    arithmetic_expression       go to state 93
    arithmetic_factor           go to state 69
    arithmetic_unary            go to state 70
    unit                        go to state 71
    array_accessor_unit         go to state 72
    dereferenced_pointer        go to state 73
    integer_value               go to state 74
    char_value                  go to state 75
    bool_value                  go to state 76


state 48

   89 arithmetic_unary: LPAREN . arithmetic_expression RPAREN

    IDENTIFIER  shift, and go to state 45
    MINUS       shift, and go to state 46
    LPAREN      shift, and go to state 48
    DECIMAL     shift, and go to state 49
    OCTAL       shift, and go to state 50
    HEX         shift, and go to state 51
    BINARY      shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    DEREF       shift, and go to state 56
    SGL_QUOTE   shift, and go to state 57

    function_invocation         go to state 58
    method_invocation           go to state 59
    class_attribute_identifier  go to state 60
    arithmetic_expression       go to state 94
    arithmetic_factor           go to state 69
    arithmetic_unary            go to state 70
    unit                        go to state 71
    array_accessor_unit         go to state 72
    dereferenced_pointer        go to state 73
    integer_value               go to state 74
    char_value                  go to state 75
    bool_value                  go to state 76


state 49

  100 integer_value: DECIMAL .

    $default  reduce using rule 100 (integer_value)


state 50

  101 integer_value: OCTAL .

    $default  reduce using rule 101 (integer_value)


state 51

  102 integer_value: HEX .

    $default  reduce using rule 102 (integer_value)


state 52

  103 integer_value: BINARY .

    $default  reduce using rule 103 (integer_value)


state 53

  105 bool_value: TRUE .

    $default  reduce using rule 105 (bool_value)


state 54

  106 bool_value: FALSE .

    $default  reduce using rule 106 (bool_value)


state 55

   64 allocation_expression: ALLOCATE . allocation_invocation SEMICOLON

    IDENTIFIER  shift, and go to state 95
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    CHAR        shift, and go to state 4
    VOID        shift, and go to state 5

    allocation_invocation  go to state 96
    primitive_type         go to state 97


state 56

   99 dereferenced_pointer: DEREF . IDENTIFIER

    IDENTIFIER  shift, and go to state 98


state 57

  104 char_value: SGL_QUOTE . IDENTIFIER SGL_QUOTE

    IDENTIFIER  shift, and go to state 99


state 58

   94 unit: function_invocation .

    $default  reduce using rule 94 (unit)


state 59

   96 unit: method_invocation .

    $default  reduce using rule 96 (unit)


state 60

   49 method_invocation: class_attribute_identifier . LPAREN parameter_list RPAREN

    LPAREN  shift, and go to state 100


state 61

   31 variable_definition_statement: type_declarator EQ expression . SEMICOLON

    SEMICOLON  shift, and go to state 101


state 62

   63 expression: allocation_expression .

    $default  reduce using rule 63 (expression)


state 63

   62 expression: logical_expression .
   68 logical_expression: logical_expression . OR logical_and_expression

    OR  shift, and go to state 102

    $default  reduce using rule 62 (expression)


state 64

   67 logical_expression: logical_and_expression .
   70 logical_and_expression: logical_and_expression . AND equality_expression

    AND  shift, and go to state 103

    $default  reduce using rule 67 (logical_expression)


state 65

   69 logical_and_expression: equality_expression .
   72 equality_expression: equality_expression . DBL_EQ relational_expression
   73                    | equality_expression . NOT_EQ relational_expression

    DBL_EQ  shift, and go to state 104
    NOT_EQ  shift, and go to state 105

    $default  reduce using rule 69 (logical_and_expression)


state 66

   71 equality_expression: relational_expression .
   75 relational_expression: relational_expression . GTR bool_expression
   76                      | relational_expression . LESS bool_expression
   77                      | relational_expression . GTR_EQ bool_expression
   78                      | relational_expression . LESS_EQ bool_expression

    GTR      shift, and go to state 106
    LESS     shift, and go to state 107
    GTR_EQ   shift, and go to state 108
    LESS_EQ  shift, and go to state 109

    $default  reduce using rule 71 (equality_expression)


state 67

   74 relational_expression: bool_expression .

    $default  reduce using rule 74 (relational_expression)


state 68

   79 bool_expression: arithmetic_expression .
   82 arithmetic_expression: arithmetic_expression . PLUS arithmetic_factor
   83                      | arithmetic_expression . MINUS arithmetic_factor

    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111

    $default  reduce using rule 79 (bool_expression)


state 69

   81 arithmetic_expression: arithmetic_factor .
   85 arithmetic_factor: arithmetic_factor . STAR arithmetic_unary
   86                  | arithmetic_factor . SLASH arithmetic_unary

    STAR   shift, and go to state 112
    SLASH  shift, and go to state 113

    $default  reduce using rule 81 (arithmetic_expression)


state 70

   84 arithmetic_factor: arithmetic_unary .

    $default  reduce using rule 84 (arithmetic_factor)


state 71

   87 arithmetic_unary: unit .

    $default  reduce using rule 87 (arithmetic_unary)


state 72

   95 unit: array_accessor_unit .

    $default  reduce using rule 95 (unit)


state 73

   97 unit: dereferenced_pointer .

    $default  reduce using rule 97 (unit)


state 74

   91 unit: integer_value .

    $default  reduce using rule 91 (unit)


state 75

   92 unit: char_value .

    $default  reduce using rule 92 (unit)


state 76

   93 unit: bool_value .

    $default  reduce using rule 93 (unit)


state 77

   56 formal_parameter_list: type_declarator .
   57                      | type_declarator . COMMA formal_parameter_list

    COMMA  shift, and go to state 114

    $default  reduce using rule 56 (formal_parameter_list)


state 78

   20 type_declarator: primitive_declarator . type_augmentation_list
   22                | primitive_declarator .

    POINTER   shift, and go to state 32
    LBRACKET  shift, and go to state 34

    $default  reduce using rule 22 (type_declarator)

    type_augmentation_list   go to state 35
    type_augmentation        go to state 36
    array_type_augmentation  go to state 37


state 79

   43 function_definition_statement: primitive_declarator LPAREN formal_parameter_list . RPAREN block_statement

    RPAREN  shift, and go to state 115


state 80

   28 array_type_augmentation: LBRACKET arithmetic_expression . RBRACKET
   82 arithmetic_expression: arithmetic_expression . PLUS arithmetic_factor
   83                      | arithmetic_expression . MINUS arithmetic_factor

    PLUS      shift, and go to state 110
    MINUS     shift, and go to state 111
    RBRACKET  shift, and go to state 116


state 81

   25 type_augmentation_list: type_augmentation type_augmentation_list .

    $default  reduce using rule 25 (type_augmentation_list)


state 82

   42 class_field: type_declarator . IDENTIFIER

    IDENTIFIER  shift, and go to state 117


state 83

   37 class_body: LBRACE class_attribute_list . RBRACE

    RBRACE  shift, and go to state 118


state 84

   38 class_attribute_list: class_attribute .
   39                     | class_attribute . class_attribute_list

    IDENTIFIER  shift, and go to state 1
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    CHAR        shift, and go to state 4
    VOID        shift, and go to state 5

    $default  reduce using rule 38 (class_attribute_list)

    type_declarator                go to state 82
    primitive_declarator           go to state 18
    user_declarator                go to state 19
    class_attribute_list           go to state 119
    class_attribute                go to state 84
    class_field                    go to state 85
    function_definition_statement  go to state 86
    primitive_type                 go to state 25


state 85

   41 class_attribute: class_field .

    $default  reduce using rule 41 (class_attribute)


state 86

   40 class_attribute: function_definition_statement .

    $default  reduce using rule 40 (class_attribute)


state 87

   36 class_extending: EXTENDS IDENTIFIER .

    $default  reduce using rule 36 (class_extending)


state 88

   19 device_declarator_statement: device_type IDENTIFIER SEMICOLON .

    $default  reduce using rule 19 (device_declarator_statement)


state 89

   47 function_invocation: IDENTIFIER LPAREN . parameter_list RPAREN

    IDENTIFIER  shift, and go to state 1
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    CHAR        shift, and go to state 4
    VOID        shift, and go to state 5

    $default  reduce using rule 61 (parameter_list)

    type_declarator       go to state 120
    primitive_declarator  go to state 78
    user_declarator       go to state 19
    parameter_list        go to state 121
    primitive_type        go to state 25


state 90

   98 array_accessor_unit: IDENTIFIER LBRACKET . arithmetic_expression RBRACKET

    IDENTIFIER  shift, and go to state 45
    MINUS       shift, and go to state 46
    LPAREN      shift, and go to state 48
    DECIMAL     shift, and go to state 49
    OCTAL       shift, and go to state 50
    HEX         shift, and go to state 51
    BINARY      shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    DEREF       shift, and go to state 56
    SGL_QUOTE   shift, and go to state 57

    function_invocation         go to state 58
    method_invocation           go to state 59
    class_attribute_identifier  go to state 60
    arithmetic_expression       go to state 122
    arithmetic_factor           go to state 69
    arithmetic_unary            go to state 70
    unit                        go to state 71
    array_accessor_unit         go to state 72
    dereferenced_pointer        go to state 73
    integer_value               go to state 74
    char_value                  go to state 75
    bool_value                  go to state 76


state 91

   51 class_attribute_identifier: IDENTIFIER DOT . IDENTIFIER
   52                           | IDENTIFIER DOT . class_attribute_identifier

    IDENTIFIER  shift, and go to state 123

    class_attribute_identifier  go to state 124


state 92

   88 arithmetic_unary: MINUS arithmetic_unary .

    $default  reduce using rule 88 (arithmetic_unary)


state 93

   80 bool_expression: BANG arithmetic_expression .
   82 arithmetic_expression: arithmetic_expression . PLUS arithmetic_factor
   83                      | arithmetic_expression . MINUS arithmetic_factor

    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111

    $default  reduce using rule 80 (bool_expression)


state 94

   82 arithmetic_expression: arithmetic_expression . PLUS arithmetic_factor
   83                      | arithmetic_expression . MINUS arithmetic_factor
   89 arithmetic_unary: LPAREN arithmetic_expression . RPAREN

    PLUS    shift, and go to state 110
    MINUS   shift, and go to state 111
    RPAREN  shift, and go to state 125


state 95

   66 allocation_invocation: IDENTIFIER . LPAREN parameter_list RPAREN

    LPAREN  shift, and go to state 126


state 96

   64 allocation_expression: ALLOCATE allocation_invocation . SEMICOLON

    SEMICOLON  shift, and go to state 127


state 97

   65 allocation_invocation: primitive_type . LPAREN parameter_list RPAREN

    LPAREN  shift, and go to state 128


state 98

   99 dereferenced_pointer: DEREF IDENTIFIER .

    $default  reduce using rule 99 (dereferenced_pointer)


state 99

  104 char_value: SGL_QUOTE IDENTIFIER . SGL_QUOTE

    SGL_QUOTE  shift, and go to state 129


state 100

   49 method_invocation: class_attribute_identifier LPAREN . parameter_list RPAREN

    IDENTIFIER  shift, and go to state 1
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    CHAR        shift, and go to state 4
    VOID        shift, and go to state 5

    $default  reduce using rule 61 (parameter_list)

    type_declarator       go to state 120
    primitive_declarator  go to state 78
    user_declarator       go to state 19
    parameter_list        go to state 130
    primitive_type        go to state 25


state 101

   31 variable_definition_statement: type_declarator EQ expression SEMICOLON .

    $default  reduce using rule 31 (variable_definition_statement)


state 102

   68 logical_expression: logical_expression OR . logical_and_expression

    IDENTIFIER  shift, and go to state 45
    MINUS       shift, and go to state 46
    BANG        shift, and go to state 47
    LPAREN      shift, and go to state 48
    DECIMAL     shift, and go to state 49
    OCTAL       shift, and go to state 50
    HEX         shift, and go to state 51
    BINARY      shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    DEREF       shift, and go to state 56
    SGL_QUOTE   shift, and go to state 57

    function_invocation         go to state 58
    method_invocation           go to state 59
    class_attribute_identifier  go to state 60
    logical_and_expression      go to state 131
    equality_expression         go to state 65
    relational_expression       go to state 66
    bool_expression             go to state 67
    arithmetic_expression       go to state 68
    arithmetic_factor           go to state 69
    arithmetic_unary            go to state 70
    unit                        go to state 71
    array_accessor_unit         go to state 72
    dereferenced_pointer        go to state 73
    integer_value               go to state 74
    char_value                  go to state 75
    bool_value                  go to state 76


state 103

   70 logical_and_expression: logical_and_expression AND . equality_expression

    IDENTIFIER  shift, and go to state 45
    MINUS       shift, and go to state 46
    BANG        shift, and go to state 47
    LPAREN      shift, and go to state 48
    DECIMAL     shift, and go to state 49
    OCTAL       shift, and go to state 50
    HEX         shift, and go to state 51
    BINARY      shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    DEREF       shift, and go to state 56
    SGL_QUOTE   shift, and go to state 57

    function_invocation         go to state 58
    method_invocation           go to state 59
    class_attribute_identifier  go to state 60
    equality_expression         go to state 132
    relational_expression       go to state 66
    bool_expression             go to state 67
    arithmetic_expression       go to state 68
    arithmetic_factor           go to state 69
    arithmetic_unary            go to state 70
    unit                        go to state 71
    array_accessor_unit         go to state 72
    dereferenced_pointer        go to state 73
    integer_value               go to state 74
    char_value                  go to state 75
    bool_value                  go to state 76


state 104

   72 equality_expression: equality_expression DBL_EQ . relational_expression

    IDENTIFIER  shift, and go to state 45
    MINUS       shift, and go to state 46
    BANG        shift, and go to state 47
    LPAREN      shift, and go to state 48
    DECIMAL     shift, and go to state 49
    OCTAL       shift, and go to state 50
    HEX         shift, and go to state 51
    BINARY      shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    DEREF       shift, and go to state 56
    SGL_QUOTE   shift, and go to state 57

    function_invocation         go to state 58
    method_invocation           go to state 59
    class_attribute_identifier  go to state 60
    relational_expression       go to state 133
    bool_expression             go to state 67
    arithmetic_expression       go to state 68
    arithmetic_factor           go to state 69
    arithmetic_unary            go to state 70
    unit                        go to state 71
    array_accessor_unit         go to state 72
    dereferenced_pointer        go to state 73
    integer_value               go to state 74
    char_value                  go to state 75
    bool_value                  go to state 76


state 105

   73 equality_expression: equality_expression NOT_EQ . relational_expression

    IDENTIFIER  shift, and go to state 45
    MINUS       shift, and go to state 46
    BANG        shift, and go to state 47
    LPAREN      shift, and go to state 48
    DECIMAL     shift, and go to state 49
    OCTAL       shift, and go to state 50
    HEX         shift, and go to state 51
    BINARY      shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    DEREF       shift, and go to state 56
    SGL_QUOTE   shift, and go to state 57

    function_invocation         go to state 58
    method_invocation           go to state 59
    class_attribute_identifier  go to state 60
    relational_expression       go to state 134
    bool_expression             go to state 67
    arithmetic_expression       go to state 68
    arithmetic_factor           go to state 69
    arithmetic_unary            go to state 70
    unit                        go to state 71
    array_accessor_unit         go to state 72
    dereferenced_pointer        go to state 73
    integer_value               go to state 74
    char_value                  go to state 75
    bool_value                  go to state 76


state 106

   75 relational_expression: relational_expression GTR . bool_expression

    IDENTIFIER  shift, and go to state 45
    MINUS       shift, and go to state 46
    BANG        shift, and go to state 47
    LPAREN      shift, and go to state 48
    DECIMAL     shift, and go to state 49
    OCTAL       shift, and go to state 50
    HEX         shift, and go to state 51
    BINARY      shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    DEREF       shift, and go to state 56
    SGL_QUOTE   shift, and go to state 57

    function_invocation         go to state 58
    method_invocation           go to state 59
    class_attribute_identifier  go to state 60
    bool_expression             go to state 135
    arithmetic_expression       go to state 68
    arithmetic_factor           go to state 69
    arithmetic_unary            go to state 70
    unit                        go to state 71
    array_accessor_unit         go to state 72
    dereferenced_pointer        go to state 73
    integer_value               go to state 74
    char_value                  go to state 75
    bool_value                  go to state 76


state 107

   76 relational_expression: relational_expression LESS . bool_expression

    IDENTIFIER  shift, and go to state 45
    MINUS       shift, and go to state 46
    BANG        shift, and go to state 47
    LPAREN      shift, and go to state 48
    DECIMAL     shift, and go to state 49
    OCTAL       shift, and go to state 50
    HEX         shift, and go to state 51
    BINARY      shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    DEREF       shift, and go to state 56
    SGL_QUOTE   shift, and go to state 57

    function_invocation         go to state 58
    method_invocation           go to state 59
    class_attribute_identifier  go to state 60
    bool_expression             go to state 136
    arithmetic_expression       go to state 68
    arithmetic_factor           go to state 69
    arithmetic_unary            go to state 70
    unit                        go to state 71
    array_accessor_unit         go to state 72
    dereferenced_pointer        go to state 73
    integer_value               go to state 74
    char_value                  go to state 75
    bool_value                  go to state 76


state 108

   77 relational_expression: relational_expression GTR_EQ . bool_expression

    IDENTIFIER  shift, and go to state 45
    MINUS       shift, and go to state 46
    BANG        shift, and go to state 47
    LPAREN      shift, and go to state 48
    DECIMAL     shift, and go to state 49
    OCTAL       shift, and go to state 50
    HEX         shift, and go to state 51
    BINARY      shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    DEREF       shift, and go to state 56
    SGL_QUOTE   shift, and go to state 57

    function_invocation         go to state 58
    method_invocation           go to state 59
    class_attribute_identifier  go to state 60
    bool_expression             go to state 137
    arithmetic_expression       go to state 68
    arithmetic_factor           go to state 69
    arithmetic_unary            go to state 70
    unit                        go to state 71
    array_accessor_unit         go to state 72
    dereferenced_pointer        go to state 73
    integer_value               go to state 74
    char_value                  go to state 75
    bool_value                  go to state 76


state 109

   78 relational_expression: relational_expression LESS_EQ . bool_expression

    IDENTIFIER  shift, and go to state 45
    MINUS       shift, and go to state 46
    BANG        shift, and go to state 47
    LPAREN      shift, and go to state 48
    DECIMAL     shift, and go to state 49
    OCTAL       shift, and go to state 50
    HEX         shift, and go to state 51
    BINARY      shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    DEREF       shift, and go to state 56
    SGL_QUOTE   shift, and go to state 57

    function_invocation         go to state 58
    method_invocation           go to state 59
    class_attribute_identifier  go to state 60
    bool_expression             go to state 138
    arithmetic_expression       go to state 68
    arithmetic_factor           go to state 69
    arithmetic_unary            go to state 70
    unit                        go to state 71
    array_accessor_unit         go to state 72
    dereferenced_pointer        go to state 73
    integer_value               go to state 74
    char_value                  go to state 75
    bool_value                  go to state 76


state 110

   82 arithmetic_expression: arithmetic_expression PLUS . arithmetic_factor

    IDENTIFIER  shift, and go to state 45
    MINUS       shift, and go to state 46
    LPAREN      shift, and go to state 48
    DECIMAL     shift, and go to state 49
    OCTAL       shift, and go to state 50
    HEX         shift, and go to state 51
    BINARY      shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    DEREF       shift, and go to state 56
    SGL_QUOTE   shift, and go to state 57

    function_invocation         go to state 58
    method_invocation           go to state 59
    class_attribute_identifier  go to state 60
    arithmetic_factor           go to state 139
    arithmetic_unary            go to state 70
    unit                        go to state 71
    array_accessor_unit         go to state 72
    dereferenced_pointer        go to state 73
    integer_value               go to state 74
    char_value                  go to state 75
    bool_value                  go to state 76


state 111

   83 arithmetic_expression: arithmetic_expression MINUS . arithmetic_factor

    IDENTIFIER  shift, and go to state 45
    MINUS       shift, and go to state 46
    LPAREN      shift, and go to state 48
    DECIMAL     shift, and go to state 49
    OCTAL       shift, and go to state 50
    HEX         shift, and go to state 51
    BINARY      shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    DEREF       shift, and go to state 56
    SGL_QUOTE   shift, and go to state 57

    function_invocation         go to state 58
    method_invocation           go to state 59
    class_attribute_identifier  go to state 60
    arithmetic_factor           go to state 140
    arithmetic_unary            go to state 70
    unit                        go to state 71
    array_accessor_unit         go to state 72
    dereferenced_pointer        go to state 73
    integer_value               go to state 74
    char_value                  go to state 75
    bool_value                  go to state 76


state 112

   85 arithmetic_factor: arithmetic_factor STAR . arithmetic_unary

    IDENTIFIER  shift, and go to state 45
    MINUS       shift, and go to state 46
    LPAREN      shift, and go to state 48
    DECIMAL     shift, and go to state 49
    OCTAL       shift, and go to state 50
    HEX         shift, and go to state 51
    BINARY      shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    DEREF       shift, and go to state 56
    SGL_QUOTE   shift, and go to state 57

    function_invocation         go to state 58
    method_invocation           go to state 59
    class_attribute_identifier  go to state 60
    arithmetic_unary            go to state 141
    unit                        go to state 71
    array_accessor_unit         go to state 72
    dereferenced_pointer        go to state 73
    integer_value               go to state 74
    char_value                  go to state 75
    bool_value                  go to state 76


state 113

   86 arithmetic_factor: arithmetic_factor SLASH . arithmetic_unary

    IDENTIFIER  shift, and go to state 45
    MINUS       shift, and go to state 46
    LPAREN      shift, and go to state 48
    DECIMAL     shift, and go to state 49
    OCTAL       shift, and go to state 50
    HEX         shift, and go to state 51
    BINARY      shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    DEREF       shift, and go to state 56
    SGL_QUOTE   shift, and go to state 57

    function_invocation         go to state 58
    method_invocation           go to state 59
    class_attribute_identifier  go to state 60
    arithmetic_unary            go to state 142
    unit                        go to state 71
    array_accessor_unit         go to state 72
    dereferenced_pointer        go to state 73
    integer_value               go to state 74
    char_value                  go to state 75
    bool_value                  go to state 76


state 114

   57 formal_parameter_list: type_declarator COMMA . formal_parameter_list

    IDENTIFIER  shift, and go to state 1
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    CHAR        shift, and go to state 4
    VOID        shift, and go to state 5

    $default  reduce using rule 58 (formal_parameter_list)

    type_declarator        go to state 77
    primitive_declarator   go to state 78
    user_declarator        go to state 19
    formal_parameter_list  go to state 143
    primitive_type         go to state 25


state 115

   43 function_definition_statement: primitive_declarator LPAREN formal_parameter_list RPAREN . block_statement

    LBRACE  shift, and go to state 144

    block_statement  go to state 145


state 116

   28 array_type_augmentation: LBRACKET arithmetic_expression RBRACKET .

    $default  reduce using rule 28 (array_type_augmentation)


state 117

   42 class_field: type_declarator IDENTIFIER .

    $default  reduce using rule 42 (class_field)


state 118

   37 class_body: LBRACE class_attribute_list RBRACE .

    $default  reduce using rule 37 (class_body)


state 119

   39 class_attribute_list: class_attribute class_attribute_list .

    $default  reduce using rule 39 (class_attribute_list)


state 120

   59 parameter_list: type_declarator .
   60               | type_declarator . COMMA parameter_list

    COMMA  shift, and go to state 146

    $default  reduce using rule 59 (parameter_list)


state 121

   47 function_invocation: IDENTIFIER LPAREN parameter_list . RPAREN

    RPAREN  shift, and go to state 147


state 122

   82 arithmetic_expression: arithmetic_expression . PLUS arithmetic_factor
   83                      | arithmetic_expression . MINUS arithmetic_factor
   98 array_accessor_unit: IDENTIFIER LBRACKET arithmetic_expression . RBRACKET

    PLUS      shift, and go to state 110
    MINUS     shift, and go to state 111
    RBRACKET  shift, and go to state 148


state 123

   51 class_attribute_identifier: IDENTIFIER . DOT IDENTIFIER
   51                           | IDENTIFIER DOT IDENTIFIER .
   52                           | IDENTIFIER . DOT class_attribute_identifier

    DOT  shift, and go to state 91

    $default  reduce using rule 51 (class_attribute_identifier)


state 124

   52 class_attribute_identifier: IDENTIFIER DOT class_attribute_identifier .

    $default  reduce using rule 52 (class_attribute_identifier)


state 125

   89 arithmetic_unary: LPAREN arithmetic_expression RPAREN .

    $default  reduce using rule 89 (arithmetic_unary)


state 126

   66 allocation_invocation: IDENTIFIER LPAREN . parameter_list RPAREN

    IDENTIFIER  shift, and go to state 1
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    CHAR        shift, and go to state 4
    VOID        shift, and go to state 5

    $default  reduce using rule 61 (parameter_list)

    type_declarator       go to state 120
    primitive_declarator  go to state 78
    user_declarator       go to state 19
    parameter_list        go to state 149
    primitive_type        go to state 25


state 127

   64 allocation_expression: ALLOCATE allocation_invocation SEMICOLON .

    $default  reduce using rule 64 (allocation_expression)


state 128

   65 allocation_invocation: primitive_type LPAREN . parameter_list RPAREN

    IDENTIFIER  shift, and go to state 1
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    CHAR        shift, and go to state 4
    VOID        shift, and go to state 5

    $default  reduce using rule 61 (parameter_list)

    type_declarator       go to state 120
    primitive_declarator  go to state 78
    user_declarator       go to state 19
    parameter_list        go to state 150
    primitive_type        go to state 25


state 129

  104 char_value: SGL_QUOTE IDENTIFIER SGL_QUOTE .

    $default  reduce using rule 104 (char_value)


state 130

   49 method_invocation: class_attribute_identifier LPAREN parameter_list . RPAREN

    RPAREN  shift, and go to state 151


state 131

   68 logical_expression: logical_expression OR logical_and_expression .
   70 logical_and_expression: logical_and_expression . AND equality_expression

    AND  shift, and go to state 103

    $default  reduce using rule 68 (logical_expression)


state 132

   70 logical_and_expression: logical_and_expression AND equality_expression .
   72 equality_expression: equality_expression . DBL_EQ relational_expression
   73                    | equality_expression . NOT_EQ relational_expression

    DBL_EQ  shift, and go to state 104
    NOT_EQ  shift, and go to state 105

    $default  reduce using rule 70 (logical_and_expression)


state 133

   72 equality_expression: equality_expression DBL_EQ relational_expression .
   75 relational_expression: relational_expression . GTR bool_expression
   76                      | relational_expression . LESS bool_expression
   77                      | relational_expression . GTR_EQ bool_expression
   78                      | relational_expression . LESS_EQ bool_expression

    GTR      shift, and go to state 106
    LESS     shift, and go to state 107
    GTR_EQ   shift, and go to state 108
    LESS_EQ  shift, and go to state 109

    $default  reduce using rule 72 (equality_expression)


state 134

   73 equality_expression: equality_expression NOT_EQ relational_expression .
   75 relational_expression: relational_expression . GTR bool_expression
   76                      | relational_expression . LESS bool_expression
   77                      | relational_expression . GTR_EQ bool_expression
   78                      | relational_expression . LESS_EQ bool_expression

    GTR      shift, and go to state 106
    LESS     shift, and go to state 107
    GTR_EQ   shift, and go to state 108
    LESS_EQ  shift, and go to state 109

    $default  reduce using rule 73 (equality_expression)


state 135

   75 relational_expression: relational_expression GTR bool_expression .

    $default  reduce using rule 75 (relational_expression)


state 136

   76 relational_expression: relational_expression LESS bool_expression .

    $default  reduce using rule 76 (relational_expression)


state 137

   77 relational_expression: relational_expression GTR_EQ bool_expression .

    $default  reduce using rule 77 (relational_expression)


state 138

   78 relational_expression: relational_expression LESS_EQ bool_expression .

    $default  reduce using rule 78 (relational_expression)


state 139

   82 arithmetic_expression: arithmetic_expression PLUS arithmetic_factor .
   85 arithmetic_factor: arithmetic_factor . STAR arithmetic_unary
   86                  | arithmetic_factor . SLASH arithmetic_unary

    STAR   shift, and go to state 112
    SLASH  shift, and go to state 113

    $default  reduce using rule 82 (arithmetic_expression)


state 140

   83 arithmetic_expression: arithmetic_expression MINUS arithmetic_factor .
   85 arithmetic_factor: arithmetic_factor . STAR arithmetic_unary
   86                  | arithmetic_factor . SLASH arithmetic_unary

    STAR   shift, and go to state 112
    SLASH  shift, and go to state 113

    $default  reduce using rule 83 (arithmetic_expression)


state 141

   85 arithmetic_factor: arithmetic_factor STAR arithmetic_unary .

    $default  reduce using rule 85 (arithmetic_factor)


state 142

   86 arithmetic_factor: arithmetic_factor SLASH arithmetic_unary .

    $default  reduce using rule 86 (arithmetic_factor)


state 143

   57 formal_parameter_list: type_declarator COMMA formal_parameter_list .

    $default  reduce using rule 57 (formal_parameter_list)


state 144

    8 block_statement: LBRACE . statement_list_block_level RBRACE

    IDENTIFIER  shift, and go to state 152
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    CHAR        shift, and go to state 4
    VOID        shift, and go to state 5
    IF          shift, and go to state 153
    WHILE       shift, and go to state 154
    LBRACE      shift, and go to state 144
    RETURN      shift, and go to state 155

    block_statement                go to state 156
    statement_list_block_level     go to state 157
    statement_block_level          go to state 158
    type_declarator                go to state 17
    primitive_declarator           go to state 78
    user_declarator                go to state 19
    variable_definition_statement  go to state 159
    variable_set_statement         go to state 160
    return_statement               go to state 161
    function_invocation            go to state 162
    function_invocation_statement  go to state 163
    method_invocation              go to state 164
    method_invocation_statement    go to state 165
    class_attribute_identifier     go to state 60
    if_block_statement             go to state 166
    while_block_statement          go to state 167
    primitive_type                 go to state 25


state 145

   43 function_definition_statement: primitive_declarator LPAREN formal_parameter_list RPAREN block_statement .

    $default  reduce using rule 43 (function_definition_statement)


state 146

   60 parameter_list: type_declarator COMMA . parameter_list

    IDENTIFIER  shift, and go to state 1
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    CHAR        shift, and go to state 4
    VOID        shift, and go to state 5

    $default  reduce using rule 61 (parameter_list)

    type_declarator       go to state 120
    primitive_declarator  go to state 78
    user_declarator       go to state 19
    parameter_list        go to state 168
    primitive_type        go to state 25


state 147

   47 function_invocation: IDENTIFIER LPAREN parameter_list RPAREN .

    $default  reduce using rule 47 (function_invocation)


state 148

   98 array_accessor_unit: IDENTIFIER LBRACKET arithmetic_expression RBRACKET .

    $default  reduce using rule 98 (array_accessor_unit)


state 149

   66 allocation_invocation: IDENTIFIER LPAREN parameter_list . RPAREN

    RPAREN  shift, and go to state 169


state 150

   65 allocation_invocation: primitive_type LPAREN parameter_list . RPAREN

    RPAREN  shift, and go to state 170


state 151

   49 method_invocation: class_attribute_identifier LPAREN parameter_list RPAREN .

    $default  reduce using rule 49 (method_invocation)


state 152

   30 user_declarator: IDENTIFIER . IDENTIFIER
   44 variable_set_statement: IDENTIFIER . EQ expression SEMICOLON
   47 function_invocation: IDENTIFIER . LPAREN parameter_list RPAREN
   51 class_attribute_identifier: IDENTIFIER . DOT IDENTIFIER
   52                           | IDENTIFIER . DOT class_attribute_identifier

    IDENTIFIER  shift, and go to state 27
    LPAREN      shift, and go to state 89
    EQ          shift, and go to state 171
    DOT         shift, and go to state 91


state 153

   53 if_block_statement: IF . LPAREN expression RPAREN block_statement
   54                   | IF . LPAREN expression RPAREN block_statement ELSE block_statement

    LPAREN  shift, and go to state 172


state 154

   55 while_block_statement: WHILE . LPAREN expression RPAREN block_statement

    LPAREN  shift, and go to state 173


state 155

   45 return_statement: RETURN . expression SEMICOLON
   46                 | RETURN . SEMICOLON

    IDENTIFIER  shift, and go to state 45
    MINUS       shift, and go to state 46
    BANG        shift, and go to state 47
    LPAREN      shift, and go to state 48
    SEMICOLON   shift, and go to state 174
    DECIMAL     shift, and go to state 49
    OCTAL       shift, and go to state 50
    HEX         shift, and go to state 51
    BINARY      shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    ALLOCATE    shift, and go to state 55
    DEREF       shift, and go to state 56
    SGL_QUOTE   shift, and go to state 57

    function_invocation         go to state 58
    method_invocation           go to state 59
    class_attribute_identifier  go to state 60
    expression                  go to state 175
    allocation_expression       go to state 62
    logical_expression          go to state 63
    logical_and_expression      go to state 64
    equality_expression         go to state 65
    relational_expression       go to state 66
    bool_expression             go to state 67
    arithmetic_expression       go to state 68
    arithmetic_factor           go to state 69
    arithmetic_unary            go to state 70
    unit                        go to state 71
    array_accessor_unit         go to state 72
    dereferenced_pointer        go to state 73
    integer_value               go to state 74
    char_value                  go to state 75
    bool_value                  go to state 76


state 156

   12 statement_block_level: block_statement .

    $default  reduce using rule 12 (statement_block_level)


state 157

    8 block_statement: LBRACE statement_list_block_level . RBRACE

    RBRACE  shift, and go to state 176


state 158

    9 statement_list_block_level: statement_block_level .
   10                           | statement_block_level . statement_list_block_level

    IDENTIFIER  shift, and go to state 152
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    CHAR        shift, and go to state 4
    VOID        shift, and go to state 5
    IF          shift, and go to state 153
    WHILE       shift, and go to state 154
    LBRACE      shift, and go to state 144
    RETURN      shift, and go to state 155

    $default  reduce using rule 9 (statement_list_block_level)

    block_statement                go to state 156
    statement_list_block_level     go to state 177
    statement_block_level          go to state 158
    type_declarator                go to state 17
    primitive_declarator           go to state 78
    user_declarator                go to state 19
    variable_definition_statement  go to state 159
    variable_set_statement         go to state 160
    return_statement               go to state 161
    function_invocation            go to state 162
    function_invocation_statement  go to state 163
    method_invocation              go to state 164
    method_invocation_statement    go to state 165
    class_attribute_identifier     go to state 60
    if_block_statement             go to state 166
    while_block_statement          go to state 167
    primitive_type                 go to state 25


state 159

   11 statement_block_level: variable_definition_statement .

    $default  reduce using rule 11 (statement_block_level)


state 160

   13 statement_block_level: variable_set_statement .

    $default  reduce using rule 13 (statement_block_level)


state 161

   17 statement_block_level: return_statement .

    $default  reduce using rule 17 (statement_block_level)


state 162

   48 function_invocation_statement: function_invocation . SEMICOLON

    SEMICOLON  shift, and go to state 178


state 163

   14 statement_block_level: function_invocation_statement .

    $default  reduce using rule 14 (statement_block_level)


state 164

   50 method_invocation_statement: method_invocation . SEMICOLON

    SEMICOLON  shift, and go to state 179


state 165

   18 statement_block_level: method_invocation_statement .

    $default  reduce using rule 18 (statement_block_level)


state 166

   15 statement_block_level: if_block_statement .

    $default  reduce using rule 15 (statement_block_level)


state 167

   16 statement_block_level: while_block_statement .

    $default  reduce using rule 16 (statement_block_level)


state 168

   60 parameter_list: type_declarator COMMA parameter_list .

    $default  reduce using rule 60 (parameter_list)


state 169

   66 allocation_invocation: IDENTIFIER LPAREN parameter_list RPAREN .

    $default  reduce using rule 66 (allocation_invocation)


state 170

   65 allocation_invocation: primitive_type LPAREN parameter_list RPAREN .

    $default  reduce using rule 65 (allocation_invocation)


state 171

   44 variable_set_statement: IDENTIFIER EQ . expression SEMICOLON

    IDENTIFIER  shift, and go to state 45
    MINUS       shift, and go to state 46
    BANG        shift, and go to state 47
    LPAREN      shift, and go to state 48
    DECIMAL     shift, and go to state 49
    OCTAL       shift, and go to state 50
    HEX         shift, and go to state 51
    BINARY      shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    ALLOCATE    shift, and go to state 55
    DEREF       shift, and go to state 56
    SGL_QUOTE   shift, and go to state 57

    function_invocation         go to state 58
    method_invocation           go to state 59
    class_attribute_identifier  go to state 60
    expression                  go to state 180
    allocation_expression       go to state 62
    logical_expression          go to state 63
    logical_and_expression      go to state 64
    equality_expression         go to state 65
    relational_expression       go to state 66
    bool_expression             go to state 67
    arithmetic_expression       go to state 68
    arithmetic_factor           go to state 69
    arithmetic_unary            go to state 70
    unit                        go to state 71
    array_accessor_unit         go to state 72
    dereferenced_pointer        go to state 73
    integer_value               go to state 74
    char_value                  go to state 75
    bool_value                  go to state 76


state 172

   53 if_block_statement: IF LPAREN . expression RPAREN block_statement
   54                   | IF LPAREN . expression RPAREN block_statement ELSE block_statement

    IDENTIFIER  shift, and go to state 45
    MINUS       shift, and go to state 46
    BANG        shift, and go to state 47
    LPAREN      shift, and go to state 48
    DECIMAL     shift, and go to state 49
    OCTAL       shift, and go to state 50
    HEX         shift, and go to state 51
    BINARY      shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    ALLOCATE    shift, and go to state 55
    DEREF       shift, and go to state 56
    SGL_QUOTE   shift, and go to state 57

    function_invocation         go to state 58
    method_invocation           go to state 59
    class_attribute_identifier  go to state 60
    expression                  go to state 181
    allocation_expression       go to state 62
    logical_expression          go to state 63
    logical_and_expression      go to state 64
    equality_expression         go to state 65
    relational_expression       go to state 66
    bool_expression             go to state 67
    arithmetic_expression       go to state 68
    arithmetic_factor           go to state 69
    arithmetic_unary            go to state 70
    unit                        go to state 71
    array_accessor_unit         go to state 72
    dereferenced_pointer        go to state 73
    integer_value               go to state 74
    char_value                  go to state 75
    bool_value                  go to state 76


state 173

   55 while_block_statement: WHILE LPAREN . expression RPAREN block_statement

    IDENTIFIER  shift, and go to state 45
    MINUS       shift, and go to state 46
    BANG        shift, and go to state 47
    LPAREN      shift, and go to state 48
    DECIMAL     shift, and go to state 49
    OCTAL       shift, and go to state 50
    HEX         shift, and go to state 51
    BINARY      shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    ALLOCATE    shift, and go to state 55
    DEREF       shift, and go to state 56
    SGL_QUOTE   shift, and go to state 57

    function_invocation         go to state 58
    method_invocation           go to state 59
    class_attribute_identifier  go to state 60
    expression                  go to state 182
    allocation_expression       go to state 62
    logical_expression          go to state 63
    logical_and_expression      go to state 64
    equality_expression         go to state 65
    relational_expression       go to state 66
    bool_expression             go to state 67
    arithmetic_expression       go to state 68
    arithmetic_factor           go to state 69
    arithmetic_unary            go to state 70
    unit                        go to state 71
    array_accessor_unit         go to state 72
    dereferenced_pointer        go to state 73
    integer_value               go to state 74
    char_value                  go to state 75
    bool_value                  go to state 76


state 174

   46 return_statement: RETURN SEMICOLON .

    $default  reduce using rule 46 (return_statement)


state 175

   45 return_statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 183


state 176

    8 block_statement: LBRACE statement_list_block_level RBRACE .

    $default  reduce using rule 8 (block_statement)


state 177

   10 statement_list_block_level: statement_block_level statement_list_block_level .

    $default  reduce using rule 10 (statement_list_block_level)


state 178

   48 function_invocation_statement: function_invocation SEMICOLON .

    $default  reduce using rule 48 (function_invocation_statement)


state 179

   50 method_invocation_statement: method_invocation SEMICOLON .

    $default  reduce using rule 50 (method_invocation_statement)


state 180

   44 variable_set_statement: IDENTIFIER EQ expression . SEMICOLON

    SEMICOLON  shift, and go to state 184


state 181

   53 if_block_statement: IF LPAREN expression . RPAREN block_statement
   54                   | IF LPAREN expression . RPAREN block_statement ELSE block_statement

    RPAREN  shift, and go to state 185


state 182

   55 while_block_statement: WHILE LPAREN expression . RPAREN block_statement

    RPAREN  shift, and go to state 186


state 183

   45 return_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 45 (return_statement)


state 184

   44 variable_set_statement: IDENTIFIER EQ expression SEMICOLON .

    $default  reduce using rule 44 (variable_set_statement)


state 185

   53 if_block_statement: IF LPAREN expression RPAREN . block_statement
   54                   | IF LPAREN expression RPAREN . block_statement ELSE block_statement

    LBRACE  shift, and go to state 144

    block_statement  go to state 187


state 186

   55 while_block_statement: WHILE LPAREN expression RPAREN . block_statement

    LBRACE  shift, and go to state 144

    block_statement  go to state 188


state 187

   53 if_block_statement: IF LPAREN expression RPAREN block_statement .
   54                   | IF LPAREN expression RPAREN block_statement . ELSE block_statement

    ELSE  shift, and go to state 189

    $default  reduce using rule 53 (if_block_statement)


state 188

   55 while_block_statement: WHILE LPAREN expression RPAREN block_statement .

    $default  reduce using rule 55 (while_block_statement)


state 189

   54 if_block_statement: IF LPAREN expression RPAREN block_statement ELSE . block_statement

    LBRACE  shift, and go to state 144

    block_statement  go to state 190


state 190

   54 if_block_statement: IF LPAREN expression RPAREN block_statement ELSE block_statement .

    $default  reduce using rule 54 (if_block_statement)
